'窗口程序集_启动窗口 代码************************************************************************************

.版本 2
.支持库 EThread
.支持库 internet
.支持库 shellEx
.支持库 xplib
.支持库 edroptarget
.支持库 eAPI

.程序集 窗口程序集_启动窗口
.程序集变量 现行时间, 文本型, , , 日志时间
.程序集变量 标准输出存放, 文本型, , , 用于存放adb标准输出变量
.程序集变量 错误输出存放, 文本型, , , 用于存放adb错误输出变量
.程序集变量 apk文件目录, 文本型, , , 用于存放读取的apk列表 :ls /data/app
.程序集变量 是否可执行, 逻辑型, , , 确保多线程互不干扰
.程序集变量 安装目录, 文本型, , , 选择apk安装目录
.程序集变量 卸载目录, 文本型, , , 选择apk卸载目录
.程序集变量 现行显示卸载目录, 文本型, , , 列出的apk列表属于的目录
.程序集变量 文件目录, 文本型, , "0", 用于分割上面“apk文件目录”所分割成的文本
.程序集变量 访问权限, 逻辑型, , , 是否允许访问
.程序集变量 亲情号码数据, 文本型, , , 读取到的亲情号码数据
.程序集变量 亲情号码原文本, 文本型, , "6", 1.亲情号码1；2.亲情号码名字1；3.亲情号码2；4.亲情号码名字2；5.亲情号码3；6.亲情号码名字3
.程序集变量 apk安装方式, 整数型, , , 0.普通安装；1.分步安装
.程序集变量 窗口保持最前, 逻辑型, , , 锁定窗口最前
.程序集变量 开启日志记录, 逻辑型, , , 日志记录
.程序集变量 日志, 文本型, , , 读取原日志
.程序集变量 安装线程句柄, 整数型, , , 用于操作停止安装apk
.程序集变量 热键f5, 整数型, , , 透明度恢复用
.程序集变量 亲情号码写入方式, 整数型, , , 0文件 1adb接口

.子程序 文本_分割文本_防超, 整数型, , 防止分割的文本不足导致超出数组
.参数 待分割文本, 文本型
.参数 分割符, 文本型, 可空
.参数 返回子文本数目, 整数型, 可空
.参数 返回数组, 文本型, 数组
.局部变量 循环次数, 整数型

文本_分割文本 (待分割文本, 分割符, 返回子文本数目, 返回数组)
.如果真 (取数组成员数 (返回数组) ＜ 返回子文本数目)
    .计次循环首 (返回子文本数目 － 取数组成员数 (返回数组), 循环次数)
        加入成员 (返回数组, “”)
    .计次循环尾 ()
.如果真结束
返回 (取数组成员数 (返回数组))

.子程序 _初始化

_读配置项 ()
窗口_圆角化 (图片框_加载中.取窗口句柄 (), , )
窗口_圆角化 (图片框_开始.取窗口句柄 (), , )
窗口_圆角化 (编辑框_开始输出框.取窗口句柄 (), , )
图片框_开始.可视 ＝ 假
图片框_加载中.可视 ＝ 真
编辑框_开始输出框.加入文本 (“正在初始化......” ＋ #换行符)
运行控制台程序 (“adb start-server”, 标准输出存放, 错误输出存放, )
adb输出 ()
编辑框_开始输出框.加入文本 (“初始化完成！” ＋ #换行符)
图片框_开始.可视 ＝ 真
图片框_加载中.可视 ＝ 假
apk安装方式 ＝ 0
窗口保持最前 ＝ 假
开启日志记录 ＝ 真
现行时间 ＝ 到文本 (取现行时间 ())
.如果真 (写到文件 (取运行目录 () ＋ “\日志文件\test.txt”, 到字节集 (“test”)) ＝ 假)
    文件_创建文件目录 (取运行目录 () ＋ “\日志文件\”)
.如果真结束
日志 ＝ 到文本 (读入文件 (取运行目录 () ＋ “\日志文件\” ＋ 到文本 (取日期 (取现行时间 ())) ＋ “.txt”))

.子程序 _可操作
.参数 是否可操作, 逻辑型

.如果真 (是否可操作 ＝ 真)
    是否可执行 ＝ 真
    _启动窗口.标题 ＝ “super engine for GK320 5.0”
    窗口_运行中.可视 ＝ 假
.如果真结束
.如果真 (是否可操作 ＝ 假)
    是否可执行 ＝ 假
    窗口_运行中.可视 ＝ 真
    _启动窗口.标题 ＝ “super engine for GK320 5.0     指令执行中......”
.如果真结束


.子程序 __启动窗口_首次激活
.局部变量 线程句柄, 整数型

启动线程 (&_初始化, , 线程句柄)


.子程序 _超级按钮_关于_被单击

选择夹1.现行子夹 ＝ 1
启动线程 (&QQ头像获取, , )

.子程序 QQ头像获取

图片框_QQ头像.图片 ＝ HTTP读文件 (“https://q1.qlogo.cn/g?b=qq&nk=2207739460&src_uin=www.jlwz.cn&s=0”)  ' //调用机领网QQ头像获取接口获取头像

.子程序 _按钮_关于返回_被单击

选择夹1.现行子夹 ＝ 2


.子程序 _打开设置

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“{打开设置}” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell am start com.android.settings”, 标准输出存放, 错误输出存放, )
adb输出 ()
_可操作 (真)

.子程序 _打开拨号

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“{打开拨号}” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell am start com.android.dialer”, 标准输出存放, 错误输出存放, )
adb输出 ()
_可操作 (真)

.子程序 _分辨率调节
.局部变量 分辨率, 文本型

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
.如果真 (输入框 (“输入分辨率：（原始240x241）”, , “240x241”, 分辨率, , _启动窗口.取窗口句柄 ()) ＝ 假)
    _可操作 (真)
    返回 ()
.如果真结束
.如果真 (分辨率 ＝ “”)
    信息框 (“请输入正确分辨率！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
编辑框_输出.加入文本 (“设置分辨率为 ” ＋ 分辨率 ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell wm size ” ＋ 分辨率, 标准输出存放, 错误输出存放, )
adb输出 ()
_可操作 (真)

.子程序 _重启设备

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“{重启设备}” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell reboot”, 标准输出存放, 错误输出存放, )
adb输出 ()
_可操作 (真)

.子程序 adb输出

.如果真 (标准输出存放 ≠ “”)
    编辑框_输出.加入文本 (编码_Utf8到Ansi (到字节集 (标准输出存放)))
    标准输出存放 ＝ “”
.如果真结束
.如果真 (错误输出存放 ≠ “”)
    编辑框_输出.加入文本 (编码_Utf8到Ansi (到字节集 (错误输出存放)))
    错误输出存放 ＝ “”
.如果真结束
编辑框_开始输出框.起始选择位置 ＝ -1

.子程序 _mtksu传输

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“复制 ” ＋ 取运行目录 () ＋ “\mtk-su 到 /data/local/tmp/” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF push ” ＋ #引号 ＋ 取运行目录 () ＋ “\mtk-su” ＋ #引号 ＋ “ /data/local/tmp/”, 标准输出存放, 错误输出存放, )
adb输出 ()
编辑框_输出.加入文本 (“权限设置 777 /data/local/tmp/mtk-su” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell chmod 777 /data/local/tmp/mtk-su”, 标准输出存放, 错误输出存放, )
adb输出 ()
_可操作 (真)


.子程序 _删除mtk

编辑框_输出.加入文本 (“{删除mtk-su}” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell rm -r /data/local/tmp/mtk-su”, 标准输出存放, 错误输出存放, )
adb输出 ()

.子程序 一键清除data应用

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“{一键清除data应用}” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mount -o rw,remount /system”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c chmod -R 600 /data/app”, 标准输出存放, 错误输出存放, )
adb输出 ()
编辑框_输出.加入文本 (“{清除完成！}” ＋ #换行符)
_可操作 (真)

.子程序 一键还原data应用

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“{一键还原data应用}” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mount -o rw,remount /system”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c chmod -R 777 /data/app”, 标准输出存放, 错误输出存放, )
adb输出 ()
编辑框_输出.加入文本 (“{还原完成！}” ＋ #换行符)
_可操作 (真)

.子程序 _安装apk
.局部变量 循环次数, 整数型

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
按钮_清空apk列表.禁止 ＝ 真
组合框_安装目录.禁止 ＝ 真
单选框_普通安装.禁止 ＝ 真
单选框_分步安装.禁止 ＝ 真
编辑框_输出.加入文本 (“挂载系统” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mount -o rw,remount /system”, 标准输出存放, 错误输出存放, )  ' //挂载系统
adb输出 ()
.如果 (apk安装方式 ＝ 0)
    .计次循环首 (列表框_apk安装.取项目数 (), 循环次数)
        编辑框_输出.加入文本 (“创建文件夹 ” ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ #换行符)  ' //列表框的项目索引从0开始，循环次数从1开始，所以要减一
        运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mkdir ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)), 标准输出存放, 错误输出存放, )  ' //循环创建文件夹
        adb输出 ()
    .计次循环尾 ()
    .计次循环首 (列表框_apk安装.取项目数 (), 循环次数)
        编辑框_输出.加入文本 (“复制 ” ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “ 到 ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “/” ＋ #换行符)
        运行控制台程序 (“adb -s0123456789ABCDEF push ” ＋ #引号 ＋ 列表框_apk安装.取项目文本 (循环次数 － 1) ＋ #引号 ＋ “ ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “/”, 标准输出存放, 错误输出存放, )
        adb输出 ()
    .计次循环尾 ()
    .计次循环首 (列表框_apk安装.取项目数 (), 循环次数)
        编辑框_输出.加入文本 (“给予 ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “ 777权限” ＋ #换行符)
        运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c chmod -R 777 ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)), 标准输出存放, 错误输出存放, )
        adb输出 ()
    .计次循环尾 ()

.否则
    .计次循环首 (列表框_apk安装.取项目数 (), 循环次数)
        编辑框_输出.加入文本 (“创建文件夹 ” ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ #换行符)  ' //列表框的项目索引从0开始，循环次数从1开始，所以要减一
        运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mkdir ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)), 标准输出存放, 错误输出存放, )  ' //循环创建文件夹
        adb输出 ()
        编辑框_输出.加入文本 (“给予文件夹权限 ” ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ #换行符)
        运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c chmod 777 ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)), 标准输出存放, 错误输出存放, )  ' //给予文件夹权限
        adb输出 ()
    .计次循环尾 ()
    .计次循环首 (列表框_apk安装.取项目数 (), 循环次数)
        编辑框_输出.加入文本 (“复制 ” ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “到 sdcard” ＋ #换行符)
        运行控制台程序 (“adb -s0123456789ABCDEF push ” ＋ #引号 ＋ 列表框_apk安装.取项目文本 (循环次数 － 1) ＋ #引号 ＋ “ /sdcard/”, 标准输出存放, 错误输出存放, )  ' //复制文件到sdcard
        adb输出 ()
    .计次循环尾 ()
    .计次循环首 (列表框_apk安装.取项目数 (), 循环次数)
        编辑框_输出.加入文本 (“移动 /sdcard/” ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “ 到 ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1) ＋ “/”) ＋ #换行符)
        运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mv /sdcard/” ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “.apk ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “/”, 标准输出存放, 错误输出存放, )  ' //复制文件到已创建的文件夹目录下
        adb输出 ()
    .计次循环尾 ()
    .计次循环首 (列表框_apk安装.取项目数 (), 循环次数)
        编辑框_输出.加入文本 (“给予 ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “ /” ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1) ＋ “.apk 777权限”) ＋ #换行符)
        运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c chmod 777 ” ＋ 安装目录 ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “/” ＋ 文件_取文件名 (列表框_apk安装.取项目文本 (循环次数 － 1)) ＋ “.apk”, 标准输出存放, 错误输出存放, )  ' 给apk文件777权限
        adb输出 ()
    .计次循环尾 ()
.如果结束
按钮_清空apk列表.禁止 ＝ 假
组合框_安装目录.禁止 ＝ 假
单选框_普通安装.禁止 ＝ 假
单选框_分步安装.禁止 ＝ 假
_可操作 (真)

.子程序 _刷新apk列表
.局部变量 循环次数, 整数型

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
列表框_删除apk.清空 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c ls ” ＋ 卸载目录, apk文件目录, 错误输出存放, )
现行显示卸载目录 ＝ 卸载目录
文本_分割文本 (apk文件目录, #换行符, , 文件目录)
.计次循环首 (取数组成员数 (文件目录), 循环次数)
    列表框_删除apk.加入项目 (UTF8到文本 (到字节集 (文件目录 [循环次数])), )
.计次循环尾 ()
_可操作 (真)


.子程序 _删除文件

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
.如果真 (列表框_删除apk.取项目文本 (列表框_删除apk.现行选中项) ＝ “”)
    信息框 (“请选择文件！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
.如果真 (信息框 (“是否确认删除” ＋ 文件目录 [列表框_删除apk.现行选中项 ＋ 1], 49, , _启动窗口.取窗口句柄 ()) ≠ 0)
    _可操作 (真)
    组合框_卸载目录.禁止 ＝ 假
    返回 ()
.如果真结束
组合框_卸载目录.禁止 ＝ 真
编辑框_输出.加入文本 (“删除 ” ＋ 现行显示卸载目录 ＋ 列表框_删除apk.取项目文本 (列表框_删除apk.现行选中项) ＋ #换行符)
写到文件 (取运行目录 () ＋ “\.tmp.bat”, 到字节集 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mount -o rw,remount /system” ＋ #换行符 ＋ “adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c rm -r ” ＋ 现行显示卸载目录 ＋ 文件目录 [列表框_删除apk.现行选中项 ＋ 1]))
运行 (取运行目录 () ＋ “\.tmp.bat”, 真, #隐藏窗口)
编辑框_输出.加入文本 (“删除完毕！” ＋ #换行符)
_可操作 (真)
组合框_卸载目录.禁止 ＝ 假

.子程序 _删除锁屏

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
写到文件 (取运行目录 () ＋ “\.tmp.bat”, #删除锁屏代码)
编辑框_输出.加入文本 (“{清除锁屏}” ＋ #换行符)
.如果真 (运行 (取运行目录 () ＋ “\.tmp.bat”, 真, #隐藏窗口) ＝ 真)
    编辑框_输出.加入文本 (“锁屏清除完毕！” ＋ #换行符)
.如果真结束
_可操作 (真)

.子程序 读入亲情号码
.局部变量 亲情号码, 文本型, , "2"

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“{读入亲情号码}” ＋ #换行符)
删除文件 (取运行目录 () ＋ “\settings_secure.xml”)
按钮_写入亲情号码.禁止 ＝ 真
按钮_读入亲情号码.禁止 ＝ 真
编辑框_亲情号码1.禁止 ＝ 真
编辑框_亲情号码2.禁止 ＝ 真
编辑框_亲情号码3.禁止 ＝ 真
编辑框_姓名1.禁止 ＝ 真
编辑框_姓名2.禁止 ＝ 真
编辑框_姓名3.禁止 ＝ 真
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c cp /data/system/users/0/settings_secure.xml /sdcard/”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF pull /sdcard/settings_secure.xml”, 标准输出存放, 错误输出存放, )
adb输出 ()
.如果 (文件是否存在 (取运行目录 () ＋ “\settings_secure.xml”) ＝ 真)
    亲情号码数据 ＝ 编码_Utf8到Ansi (读入文件 (取运行目录 () ＋ “\settings_secure.xml”))
    .如果 (文本_分割文本_防超 (文本_取出中间文本 (亲情号码数据, “#引号contact0#引号 value=#引号”, “#引号 package=#引号”, , 真), “,”, 2, 亲情号码) ≠ 0)
        编辑框_姓名1.内容 ＝ 亲情号码 [1]
        编辑框_亲情号码1.内容 ＝ 亲情号码 [2]
    .否则
        编辑框_姓名1.内容 ＝ “空”
        编辑框_亲情号码1.内容 ＝ “空”
    .如果结束
    .如果 (文本_分割文本_防超 (文本_取出中间文本 (亲情号码数据, “#引号contact1#引号 value=#引号”, “#引号 package=#引号”, , 真), “,”, 2, 亲情号码) ≠ 0)
        编辑框_姓名2.内容 ＝ 亲情号码 [1]
        编辑框_亲情号码2.内容 ＝ 亲情号码 [2]
    .否则
        编辑框_姓名2.内容 ＝ “空”
        编辑框_亲情号码2.内容 ＝ “空”
    .如果结束
    .如果 (文本_分割文本_防超 (文本_取出中间文本 (亲情号码数据, “#引号contact2#引号 value=#引号”, “#引号 package=#引号”, , 真), “,”, 2, 亲情号码) ≠ 0)
        编辑框_姓名3.内容 ＝ 亲情号码 [1]
        编辑框_亲情号码3.内容 ＝ 亲情号码 [2]
    .否则
        编辑框_姓名3.内容 ＝ “空”
        编辑框_亲情号码3.内容 ＝ “空”
    .如果结束
    亲情号码原文本 [1] ＝ 编辑框_姓名1.内容
    亲情号码原文本 [2] ＝ 编辑框_亲情号码1.内容
    亲情号码原文本 [3] ＝ 编辑框_姓名2.内容
    亲情号码原文本 [4] ＝ 编辑框_亲情号码2.内容
    亲情号码原文本 [5] ＝ 编辑框_姓名3.内容
    亲情号码原文本 [6] ＝ 编辑框_亲情号码3.内容
    adb输出 ()
    编辑框_输出.加入文本 (“{读入完毕！}” ＋ #换行符)
    按钮_写入亲情号码.禁止 ＝ 假
.否则
    编辑框_输出.加入文本 (“{读入失败！}” ＋ #换行符)
    编辑框_姓名1.内容 ＝ “读取失败！”
    编辑框_姓名2.内容 ＝ “读取失败！”
    编辑框_姓名3.内容 ＝ “读取失败！”
    编辑框_亲情号码1.内容 ＝ “读取失败！”
    编辑框_亲情号码2.内容 ＝ “读取失败！”
    编辑框_亲情号码3.内容 ＝ “读取失败！”
    信息框 (“读入失败！”, 0, , _启动窗口.取窗口句柄 ())
.如果结束
按钮_写入亲情号码.禁止 ＝ 假
按钮_读入亲情号码.禁止 ＝ 假
编辑框_亲情号码1.禁止 ＝ 假
编辑框_亲情号码2.禁止 ＝ 假
编辑框_亲情号码3.禁止 ＝ 假
编辑框_姓名1.禁止 ＝ 假
编辑框_姓名2.禁止 ＝ 假
编辑框_姓名3.禁止 ＝ 假
按钮_读入亲情号码.禁止 ＝ 假
_可操作 (真)


.子程序 读入亲情号码1
.局部变量 亲情号码原数据, 文本型, , "3"
.局部变量 亲情号码, 文本型, , "2"

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
按钮_写入亲情号码.禁止 ＝ 真
按钮_读入亲情号码.禁止 ＝ 真
编辑框_亲情号码1.禁止 ＝ 真
编辑框_亲情号码2.禁止 ＝ 真
编辑框_亲情号码3.禁止 ＝ 真
编辑框_姓名1.禁止 ＝ 真
编辑框_姓名2.禁止 ＝ 真
编辑框_姓名3.禁止 ＝ 真
按钮_写入亲情号码.禁止 ＝ 真
编辑框_输出.加入文本 (“{读入亲情号码}” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c settings list secure”, 标准输出存放, 错误输出存放, )
标准输出存放 ＝ 编码_Utf8到Ansi (到字节集 (标准输出存放))
亲情号码原数据 [1] ＝ 文本_取出中间文本 (标准输出存放, “contact0=”, #换行符, , )
亲情号码原数据 [2] ＝ 文本_取出中间文本 (标准输出存放, “contact1=”, #换行符, , )
亲情号码原数据 [3] ＝ 文本_取出中间文本 (标准输出存放, “contact2=”, #换行符, , )
文本_分割文本_防超 (亲情号码原数据 [1], “,”, 2, 亲情号码)
编辑框_姓名1.内容 ＝ 亲情号码 [1]
编辑框_亲情号码1.内容 ＝ 取文本左边 (亲情号码 [2], 11)
文本_分割文本_防超 (亲情号码原数据 [2], “,”, 2, 亲情号码)
编辑框_姓名2.内容 ＝ 亲情号码 [1]
编辑框_亲情号码2.内容 ＝ 取文本左边 (亲情号码 [2], 11)
文本_分割文本_防超 (亲情号码原数据 [3], “,”, 2, 亲情号码)
编辑框_姓名3.内容 ＝ 亲情号码 [1]
编辑框_亲情号码3.内容 ＝ 取文本左边 (亲情号码 [2], 11)
按钮_写入亲情号码.禁止 ＝ 假
按钮_读入亲情号码.禁止 ＝ 假
编辑框_亲情号码1.禁止 ＝ 假
编辑框_亲情号码2.禁止 ＝ 假
编辑框_亲情号码3.禁止 ＝ 假
编辑框_姓名1.禁止 ＝ 假
编辑框_姓名2.禁止 ＝ 假
编辑框_姓名3.禁止 ＝ 假
_可操作 (真)

.子程序 写入亲情号码
.局部变量 循环次数_删除配置项, 整数型

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
按钮_写入亲情号码.禁止 ＝ 真
按钮_读入亲情号码.禁止 ＝ 真
编辑框_亲情号码1.禁止 ＝ 真
编辑框_亲情号码2.禁止 ＝ 真
编辑框_亲情号码3.禁止 ＝ 真
编辑框_姓名1.禁止 ＝ 真
编辑框_姓名2.禁止 ＝ 真
编辑框_姓名3.禁止 ＝ 真
_判断亲情号码空数据 ()
编辑框_输出.加入文本 (“{写入亲情号码 文件}” ＋ #换行符)
' 写亲情号码!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
亲情号码数据 ＝ 编码_Utf8到Ansi (读入文件 (取运行目录 () ＋ “\settings_secure.xml”))
.判断循环首 (寻找文本 (亲情号码数据, #引号 ＋ “contact”, 1, 真) ≠ -1)
    亲情号码数据 ＝ 文本_删除指定文本行 (亲情号码数据, 文本_取文本所在行 (亲情号码数据, #引号 ＋ “contact”, ))
.判断循环尾 ()
.计次循环首 (3, 循环次数_删除配置项)
    亲情号码数据 ＝ 文本_删除指定文本行 (亲情号码数据, 文本_取文本所在行 (亲情号码数据, “</settings>”, ))
.计次循环尾 ()
亲情号码数据 ＝ 亲情号码数据 ＋ #换行符 ＋ “  <setting id=” ＋ #引号 ＋ “67” ＋ #引号 ＋ “ name=” ＋ #引号 ＋ “contact0” ＋ #引号 ＋ “ value=” ＋ #引号 ＋ 编辑框_姓名1.内容 ＋ “,” ＋ 编辑框_亲情号码1.内容 ＋ #引号 ＋ “ package=” ＋ #引号 ＋ “com.kksxa.atwhere” ＋ #引号 ＋ “ />” ＋ #换行符 ＋ “  <setting id=” ＋ #引号 ＋ “68” ＋ #引号 ＋ “ name=” ＋ #引号 ＋ “contact1” ＋ #引号 ＋ “ value=” ＋ #引号 ＋ 编辑框_姓名2.内容 ＋ “,” ＋ 编辑框_亲情号码2.内容 ＋ #引号 ＋ “ package=” ＋ #引号 ＋ “com.kksxa.atwhere” ＋ #引号 ＋ “ />” ＋ #换行符 ＋ “  <setting id=” ＋ #引号 ＋ “40167” ＋ #引号 ＋ “ name=” ＋ #引号 ＋ “contact2” ＋ #引号 ＋ “ value=” ＋ #引号 ＋ 编辑框_姓名3.内容 ＋ “,” ＋ 编辑框_亲情号码3.内容 ＋ #引号 ＋ “ package=” ＋ #引号 ＋ “com.kksxa.atwhere” ＋ #引号 ＋ “ />” ＋ #换行符 ＋ “</settings>”
写到文件 (取运行目录 () ＋ “\settings_secure.xml”, 编码_Ansi到Utf8 (亲情号码数据))
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mount -o rw,remount /system”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF push ” ＋ #引号 ＋ 取运行目录 () ＋ “\settings_secure.xml” ＋ #引号 ＋ “ /sdcard/”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mv /sdcard/settings_secure.xml /data/system/users/0/”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c chmod 600 /data/system/users/0/settings_secure.xml”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c chown 1000 /data/system/users/0/settings_secure.xml”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c chgrp 1000 /data/system/users/0/settings_secure.xml”, 标准输出存放, 错误输出存放, )
adb输出 ()
' 结束!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
编辑框_输出.加入文本 (“写入亲情号码 finish！” ＋ #换行符)
按钮_写入亲情号码.禁止 ＝ 假
按钮_读入亲情号码.禁止 ＝ 假
编辑框_亲情号码1.禁止 ＝ 假
编辑框_亲情号码2.禁止 ＝ 假
编辑框_亲情号码3.禁止 ＝ 假
编辑框_姓名1.禁止 ＝ 假
编辑框_姓名2.禁止 ＝ 假
编辑框_姓名3.禁止 ＝ 假
_可操作 (真)


.子程序 写入亲情号码1
.局部变量 代码, 文本型

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
按钮_写入亲情号码.禁止 ＝ 真
按钮_读入亲情号码.禁止 ＝ 真
编辑框_亲情号码1.禁止 ＝ 真
编辑框_亲情号码2.禁止 ＝ 真
编辑框_亲情号码3.禁止 ＝ 真
编辑框_姓名1.禁止 ＝ 真
编辑框_姓名2.禁止 ＝ 真
编辑框_姓名3.禁止 ＝ 真
_判断亲情号码空数据 ()
编辑框_输出.加入文本 (“{写入亲情号码 接口}” ＋ #换行符)
' 代码开始点------------------------------------------------
写到文件 (取运行目录 () ＋ “\tmp.sh”, 编码_Ansi到Utf8 (“settings put secure contact0 ” ＋ 编辑框_姓名1.内容 ＋ “,” ＋ 编辑框_亲情号码1.内容 ＋ #换行符 ＋ “settings put secure contact1 ” ＋ 编辑框_姓名2.内容 ＋ “,” ＋ 编辑框_亲情号码2.内容 ＋ #换行符 ＋ “settings put secure contact2 ” ＋ 编辑框_姓名3.内容 ＋ “,” ＋ 编辑框_亲情号码3.内容))
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mount -o rw,remount /system”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF push ” ＋ #引号 ＋ 取运行目录 () ＋ “\tmp.sh” ＋ #引号 ＋ “ /sdcard/”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mv ” ＋ “/sdcard/tmp.sh /system/bin/”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c chmod 777 /system/bin/tmp.sh”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell tmp.sh”, 标准输出存放, 错误输出存放, )
adb输出 ()
' 代码结束点------------------------------------------------
编辑框_输出.加入文本 (“写入亲情号码 finish！” ＋ #换行符)
按钮_写入亲情号码.禁止 ＝ 假
按钮_读入亲情号码.禁止 ＝ 假
编辑框_亲情号码1.禁止 ＝ 假
编辑框_亲情号码2.禁止 ＝ 假
编辑框_亲情号码3.禁止 ＝ 假
编辑框_姓名1.禁止 ＝ 假
编辑框_姓名2.禁止 ＝ 假
编辑框_姓名3.禁止 ＝ 假
_可操作 (真)


.子程序 _判断亲情号码空数据

.如果真 (编辑框_姓名1.内容 ＝ “”)
    编辑框_姓名1.内容 ＝ “空”
.如果真结束
.如果真 (编辑框_姓名2.内容 ＝ “”)
    编辑框_姓名2.内容 ＝ “空”
.如果真结束
.如果真 (编辑框_姓名3.内容 ＝ “”)
    编辑框_姓名3.内容 ＝ “空”
.如果真结束
.如果真 (编辑框_亲情号码1.内容 ＝ “”)
    编辑框_亲情号码1.内容 ＝ “空”
.如果真结束
.如果真 (编辑框_亲情号码2.内容 ＝ “”)
    编辑框_亲情号码2.内容 ＝ “空”
.如果真结束
.如果真 (编辑框_亲情号码3.内容 ＝ “”)
    编辑框_亲情号码3.内容 ＝ “空”
.如果真结束


.子程序 _重置亲情号码1

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“【重置亲情号码】” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c settings delete secure contact0”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c settings delete secure contact1”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c settings delete secure contact2”, 标准输出存放, 错误输出存放, )
adb输出 ()
编辑框_输出.加入文本 (“【重置完成】” ＋ #换行符)
_可操作 (真)

.子程序 _重置亲情号码2

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“【重置亲情号码】” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c mount -o rw,remount /system”, 标准输出存放, 错误输出存放, )
adb输出 ()
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c rm -f /data/system/users/0/settings_secure.xml”, 标准输出存放, 错误输出存放, )
adb输出 ()
编辑框_输出.加入文本 (“【重置完成】” ＋ #换行符)
_可操作 (真)

.子程序 _图片框_设置_鼠标左键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

启动线程 (&_打开设置, , )

.子程序 _图片框_拨号_鼠标左键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

启动线程 (&_打开拨号, , )


.子程序 _图片框_分辨率_鼠标左键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

启动线程 (&_分辨率调节, , )


.子程序 __启动窗口_创建完毕

热键f5 ＝ 注册热键 (_启动窗口.取窗口句柄 (), 标签_透明度_2.取窗口句柄 (), 0, #F5键)
载入 (窗口_运行中, , 假)
亲情号码写入方式 ＝ 1
.如果真 (热键f5 ＝ 0)
    信息框 (“无法注册热键！”, 0, , _启动窗口.取窗口句柄 ())
.如果真结束
访问权限 ＝ 假
XP风格 (1)
选择夹1.隐藏自身 ＝ 真
_启动窗口.宽度 ＝ 603  ' 设置窗口属性
_启动窗口.高度 ＝ 489
编辑框_输出.顶边 ＝ 304
编辑框_输出.左边 ＝ 4
拖放对象_apk安装.注册拖放控件 (列表框_apk安装.取窗口句柄 ())
是否可执行 ＝ 真
_组合框_安装目录_列表项被选择 ()
_组合框_卸载目录_列表项被选择 ()

.子程序 _图片框_重启设备_鼠标左键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

启动线程 (&_重启设备, , )


.子程序 _图片框_mtksu传输_鼠标左键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

启动线程 (&_mtksu传输, , )

.子程序 _拖放对象_apk安装_得到文件
.参数 接收到的文件路径, 文本型
.局部变量 文件名, 文本型, , "20"
.局部变量 循环次数, 整数型

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
.如果真 (列表框_apk安装.取项目文本 (0) ＝ “将文件拖动至此进行安装”)
    列表框_apk安装.清空 ()
.如果真结束
.如果真 (文本_取行数 (接收到的文件路径) ＞ 20)  ' //判断文件是否过多，这里设置为20
    信息框 (“一次最多只能安装20个软件！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
.如果真 (文本_取行数 (接收到的文件路径) ＝ 1)
    .如果真 (文件_取扩展名 (接收到的文件路径) ≠ “.apk”)  ' //判断是否不是apk文件，若不是则返回
        信息框 (“含有非apk文件！”, 0, , _启动窗口.取窗口句柄 ())
        列表框_apk安装.加入项目 (“将文件拖动至此进行安装”, )
        返回 ()
    .如果真结束
    列表框_apk安装.加入项目 (接收到的文件路径, )
    返回 ()
.如果真结束
文本_分割文本 (接收到的文件路径, #换行符, , 文件名)
.计次循环首 (取数组成员数 (文件名), 循环次数)
    .如果真 (文件_取扩展名 (文件名 [循环次数]) ≠ “.apk”)
        信息框 (“含有非apk文件！”, 0, , _启动窗口.取窗口句柄 ())
        列表框_apk安装.加入项目 (“将文件拖动至此进行安装”, )
        返回 ()
    .如果真结束

.计次循环尾 ()
.计次循环首 (取数组成员数 (文件名), 循环次数)
    列表框_apk安装.加入项目 (文件名 [循环次数], )
.计次循环尾 ()

.子程序 _图片框_apk安装_鼠标左键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

选择夹1.现行子夹 ＝ 3


.子程序 _按钮_安装返回_被单击

选择夹1.现行子夹 ＝ 2


.子程序 _按钮_清空apk列表_被单击

列表框_apk安装.清空 ()
列表框_apk安装.加入项目 (“将文件拖动至此进行安装”, )

.子程序 _按钮_开始安装_被单击

.如果真 (列表框_apk安装.取项目文本 (0) ＝ “将文件拖动至此进行安装”)
    信息框 (“请选择文件！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
启动线程 (&_安装apk, , 安装线程句柄)

.子程序 _列表框_apk安装_双击选择

.如果真 (列表框_apk安装.取项目文本 (列表框_apk安装.现行选中项) ≠ “”)
    提示框 (列表框_apk安装.取项目文本 (列表框_apk安装.现行选中项), , “文件名”, , 3000)  ' //查看完整文件目录
.如果真结束


.子程序 _按钮_刷新apk列表_被单击

启动线程 (&_刷新apk列表, , )


.子程序 _按钮_删除文件_被单击

启动线程 (&_删除文件, , )

.子程序 _图片框_开始_鼠标左键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

选择夹1.现行子夹 ＝ 2
选择夹1.背景颜色 ＝ #默认色
窗口_圆角化 (编辑框_输出.取窗口句柄 (), , )

.子程序 _图片框_删除锁屏_鼠标左键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

.如果真 (信息框 (“是否确认清除锁屏?”, 49, , _启动窗口.取窗口句柄 ()) ＝ 0)
    启动线程 (&_删除锁屏, , )
.如果真结束


.子程序 __启动窗口_将被销毁

运行控制台程序 (“adb kill-server”, 标准输出存放, 错误输出存放, )
adb输出 ()
.如果真 (开启日志记录 ＝ 真)
    创建目录 (取运行目录 () ＋ “\日志文件”)
    写到文件 (取运行目录 () ＋ “\日志文件\” ＋ 到文本 (取日期 (取现行时间 ())) ＋ “.txt”, 到字节集 (日志 ＋ #换行符 ＋ “### ” ＋ 现行时间 ＋ #换行符 ＋ 编辑框_输出.内容 ＋ #换行符))
.如果真结束
结束 ()

.子程序 _读配置项

.如果 (读配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “窗口总在最前”, ) ＝ “真”)
    选择框_保持窗口最前.选中 ＝ 真
    _选择框_保持窗口最前_被单击 ()
.否则
    选择框_保持窗口最前.选中 ＝ 假
    _选择框_保持窗口最前_被单击 ()
.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “安装方式”, ) ＝ “1”)  ' “0”为普通安装
    单选框_普通安装.选中 ＝ 假
    单选框_分步安装.选中 ＝ 真
    _单选框_普通安装_被单击 ()
.否则
    单选框_分步安装.选中 ＝ 假
    单选框_普通安装.选中 ＝ 真
    _单选框_分步安装_被单击 ()
.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “日志记录”, ) ＝ “假”)
    单选框_启动日志记录.选中 ＝ 假
    单选框_关闭日志记录.选中 ＝ 真
    _单选框_关闭日志记录_被单击 ()
.否则
    单选框_启动日志记录.选中 ＝ 真
    单选框_关闭日志记录.选中 ＝ 假
    _单选框_关闭日志记录_被单击 ()
.如果结束
.如果 (读配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “亲情号码写入方式”, ) ＝ “文件”)
    单选框_文件.选中 ＝ 真
    单选框_接口.选中 ＝ 假
    _单选框_文件_被单击 ()
.否则
    单选框_接口.选中 ＝ 真
    单选框_文件.选中 ＝ 假
    _单选框_接口_被单击 ()
.如果结束


.子程序 _写配置项

.如果 (选择框_保持窗口最前.选中 ＝ 真)
    写配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “窗口总在最前”, “真”)
.否则
    写配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “窗口总在最前”, “假”)
.如果结束
.如果 (单选框_普通安装.选中 ＝ 真)
    写配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “安装方式”, “0”)
.否则
    写配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “安装方式”, “1”)
.如果结束
.如果 (单选框_启动日志记录.选中 ＝ 假)
    写配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “日志记录”, “假”)
.否则
    写配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “日志记录”, “真”)
.如果结束
.如果 (单选框_文件.选中 ＝ 假)
    写配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “亲情号码写入方式”, “adb接口”)
.否则
    写配置项 (取运行目录 () ＋ “\配置.ini”, “配置”, “亲情号码写入方式”, “文件”)
.如果结束


.子程序 _组合框_安装目录_列表项被选择

.如果真 (组合框_安装目录.现行选中项 ＝ 0)
    安装目录 ＝ “/data/app/”
.如果真结束
.如果真 (组合框_安装目录.现行选中项 ＝ 1)
    .如果真 (apk安装方式 ＝ 0)
        信息框 (“请设置安装方式为分步安装！”, 0, , _启动窗口.取窗口句柄 ())
    .如果真结束
    安装目录 ＝ “/vendor/operator/app/”
.如果真结束
.如果真 (组合框_安装目录.现行选中项 ＝ 2)
    .如果真 (apk安装方式 ＝ 0)
        信息框 (“请设置安装方式为分步安装！”, 0, , _启动窗口.取窗口句柄 ())
    .如果真结束
    安装目录 ＝ “/system/app/”
.如果真结束


.子程序 _组合框_卸载目录_列表项被选择

.如果真 (组合框_卸载目录.现行选中项 ＝ 0)
    卸载目录 ＝ “/data/app/”
.如果真结束
.如果真 (组合框_卸载目录.现行选中项 ＝ 1)
    卸载目录 ＝ “/vendor/operator/app/”
.如果真结束
.如果真 (组合框_卸载目录.现行选中项 ＝ 2)
    卸载目录 ＝ “/system/app/”
.如果真结束


.子程序 _打开文件传输_被选择

编辑框_输出.加入文本 (“{设置为mtp传输}” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell setprop persist.sys.usb.config adb,mtp”, 标准输出存放, 错误输出存放, )
adb输出 ()

.子程序 _图片框_mtksu传输_鼠标右键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

弹出菜单 (mtk, , )

.子程序 _图片框_重启设备_鼠标右键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

弹出菜单 (重启, , )


.子程序 _删除mtksu_被选择

启动线程 (&_删除mtk, , )

.子程序 _关机_被选择

编辑框_输出.加入文本 (“关机” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell reboot -p”, 标准输出存放, 错误输出存放, )
adb输出 ()

.子程序 _图片框_亲情号码_鼠标左键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

选择夹1.现行子夹 ＝ 4


.子程序 _按钮_亲情号码_返回_被单击

选择夹1.现行子夹 ＝ 2


.子程序 _按钮_读入亲情号码_被单击

.如果 (亲情号码写入方式 ＝ 0)
    启动线程 (&读入亲情号码, , )
.否则
    启动线程 (&读入亲情号码1, , )
.如果结束


.子程序 _按钮_写入亲情号码_被单击

.如果 (亲情号码写入方式 ＝ 0)
    启动线程 (&写入亲情号码, , )
.否则
    启动线程 (&写入亲情号码1, , )
.如果结束


.子程序 _图片框_设置_鼠标右键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

弹出菜单 (设置, , )


.子程序 _打开wifi

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“打开wifi” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c svc wifi enable”, 标准输出存放, 错误输出存放, )
adb输出 ()
_可操作 (真)

.子程序 _关闭wifi

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
编辑框_输出.加入文本 (“关闭wifi” ＋ #换行符)
运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c svc wifi disable”, 标准输出存放, 错误输出存放, )
adb输出 ()
_可操作 (真)

.子程序 _打开wifi_被选择

启动线程 (&_打开wifi, , )


.子程序 _关闭wifi_被选择

启动线程 (&_关闭wifi, , )


.子程序 _编辑框_姓名1_获得焦点

.如果真 (编辑框_姓名1.内容 ＝ “空”)
    编辑框_姓名1.内容 ＝ “”
.如果真结束


.子程序 _编辑框_姓名1_失去焦点

.如果真 (编辑框_姓名1.内容 ＝ “”)
    编辑框_姓名1.内容 ＝ “空”
.如果真结束


.子程序 _编辑框_亲情号码1_获得焦点

.如果真 (编辑框_亲情号码1.内容 ＝ “空”)
    编辑框_亲情号码1.内容 ＝ “”
.如果真结束


.子程序 _编辑框_亲情号码1_失去焦点

.如果真 (编辑框_亲情号码1.内容 ＝ “”)
    编辑框_亲情号码1.内容 ＝ “空”
.如果真结束


.子程序 _编辑框_姓名2_获得焦点

.如果真 (编辑框_姓名2.内容 ＝ “空”)
    编辑框_姓名2.内容 ＝ “”
.如果真结束


.子程序 _编辑框_姓名2_失去焦点

.如果真 (编辑框_姓名2.内容 ＝ “”)
    编辑框_姓名2.内容 ＝ “空”
.如果真结束


.子程序 _编辑框_亲情号码2_获得焦点

.如果真 (编辑框_亲情号码2.内容 ＝ “空”)
    编辑框_亲情号码2.内容 ＝ “”
.如果真结束


.子程序 _编辑框_亲情号码2_失去焦点

.如果真 (编辑框_亲情号码2.内容 ＝ “”)
    编辑框_亲情号码2.内容 ＝ “空”
.如果真结束


.子程序 _编辑框_姓名3_获得焦点

.如果真 (编辑框_姓名3.内容 ＝ “空”)
    编辑框_姓名3.内容 ＝ “”
.如果真结束


.子程序 _编辑框_姓名3_失去焦点

.如果真 (编辑框_姓名3.内容 ＝ “”)
    编辑框_姓名3.内容 ＝ “空”
.如果真结束


.子程序 _编辑框_亲情号码3_获得焦点

.如果真 (编辑框_亲情号码3.内容 ＝ “空”)
    编辑框_亲情号码3.内容 ＝ “”
.如果真结束


.子程序 _编辑框_亲情号码3_失去焦点

.如果真 (编辑框_亲情号码3.内容 ＝ “”)
    编辑框_亲情号码3.内容 ＝ “空”
.如果真结束


.子程序 _超级按钮_设置_被单击

选择夹1.现行子夹 ＝ 5


.子程序 _按钮_设置返回_被单击

选择夹1.现行子夹 ＝ 2


.子程序 _单选框_普通安装_被单击

.如果真 (单选框_普通安装.选中 ＝ 真)
    apk安装方式 ＝ 0
.如果真结束


.子程序 _单选框_分步安装_被单击

.如果真 (单选框_分步安装.选中 ＝ 真)
    apk安装方式 ＝ 1
.如果真结束


.子程序 _选择框_保持窗口最前_被单击

.如果 (选择框_保持窗口最前.选中 ＝ 真)
    _启动窗口.总在最前 ＝ 真
    窗口保持最前 ＝ 真
.否则
    _启动窗口.总在最前 ＝ 假
    窗口保持最前 ＝ 假
.如果结束


.子程序 _单选框_启动日志记录_被单击

.如果真 (单选框_启动日志记录.选中 ＝ 真)
    开启日志记录 ＝ 真
.如果真结束


.子程序 _单选框_关闭日志记录_被单击

.如果真 (单选框_关闭日志记录.选中 ＝ 真)
    开启日志记录 ＝ 假
.如果真结束


.子程序 _按钮_开始安装_鼠标右键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

.如果真 (线程_销毁 (安装线程句柄) ＝ 真)
    信息框 (“已终止安装线程！”, 0, , _启动窗口.取窗口句柄 ())
    编辑框_输出.加入文本 (“【终止安装！】” ＋ #换行符)
    按钮_清空apk列表.禁止 ＝ 假
    组合框_安装目录.禁止 ＝ 假
    单选框_普通安装.禁止 ＝ 假
    单选框_分步安装.禁止 ＝ 假
    _可操作 (真)
.如果真结束


.子程序 _滑块条_窗口透明度_位置被改变

设置窗口透明度 (_启动窗口.取窗口句柄 (), 滑块条_窗口透明度.位置)


.子程序 _标签_透明度_2_反馈事件, 整数型
.参数 参数一, 整数型
.参数 参数二, 整数型

.如果真 (参数一 ＝ 热键f5)
    滑块条_窗口透明度.位置 ＝ 255
    _滑块条_窗口透明度_位置被改变 ()
.如果真结束


.子程序 _一键清除data应用_被选择

启动线程 (&一键清除data应用, , )

.子程序 _一键还原data应用_被选择

启动线程 (&一键还原data应用, , )

.子程序 _单选框_文件_被单击

亲情号码写入方式 ＝ 0
.如果 (文件是否存在 (取运行目录 () ＋ “\settings_secure.xml”) ＝ 假)
    按钮_写入亲情号码.禁止 ＝ 真
.否则
    按钮_写入亲情号码.禁止 ＝ 假
.如果结束
标签_亲情号码提示.可视 ＝ 真


.子程序 _单选框_接口_被单击

亲情号码写入方式 ＝ 1
按钮_写入亲情号码.禁止 ＝ 假
标签_亲情号码提示.可视 ＝ 假

.子程序 _编辑框_亲情号码1_内容被改变

.如果 (取文本长度 (编辑框_亲情号码1.内容) ＝ 11)
    编辑框_亲情号码1.文本颜色 ＝ #绿色
.否则
    编辑框_亲情号码1.文本颜色 ＝ #黑色
.如果结束


.子程序 _编辑框_亲情号码2_内容被改变

.如果 (取文本长度 (编辑框_亲情号码2.内容) ＝ 11)
    编辑框_亲情号码2.文本颜色 ＝ #绿色
.否则
    编辑框_亲情号码2.文本颜色 ＝ #黑色
.如果结束


.子程序 _编辑框_亲情号码3_内容被改变

.如果 (取文本长度 (编辑框_亲情号码3.内容) ＝ 11)
    编辑框_亲情号码3.文本颜色 ＝ #绿色
.否则
    编辑框_亲情号码3.文本颜色 ＝ #黑色
.如果结束


.子程序 _按钮_保存设置_被单击

_写配置项 ()
信息框 (“完成！”, 0, , _启动窗口.取窗口句柄 ())

.子程序 _执行代码_被选择

启动线程 (&执行代码, , )

.子程序 执行代码
.局部变量 代码, 文本型
.局部变量 文本位置, 整数型

.如果真 (是否可执行 ＝ 假)
    信息框 (“等待指令执行完成可进行下一步操作！”, 0, , _启动窗口.取窗口句柄 ())
    返回 ()
.如果真结束
_可操作 (假)
.如果真 (输入框 (“输入要执行的adb代码，如shell ls /sdcard/” ＋ #换行符 ＋ “root在前面加-root 如: -root mkdir /data/app/a”, “执行”, “shell ls /sdcard/”, 代码, 1, _启动窗口.取窗口句柄 ()) ＝ 真)
    .如果真 (取文本左边 (删全部空 (代码), 2) ＝ “-r”)
        编辑框_输出.加入文本 (代码 ＋ #换行符)
        文本位置 ＝ 取文本长度 (代码) － 寻找文本 (代码, “-root”, , 假) － 5
        代码 ＝ 取文本右边 (代码, 文本位置)
        运行控制台程序 (“adb -s0123456789ABCDEF shell /data/local/tmp/mtk-su -c ” ＋ 代码, 标准输出存放, 错误输出存放, )
        adb输出 ()
        _可操作 (真)
        返回 ()
    .如果真结束
    编辑框_输出.加入文本 (代码 ＋ #换行符)
    运行控制台程序 (“adb -s0123456789ABCDEF ” ＋ 代码, 标准输出存放, 错误输出存放, )
    adb输出 ()
.如果真结束
_可操作 (真)


.子程序 _标签_重置亲情号码_鼠标左键被放开, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型
.局部变量 删除类型, 整数型

.如果真 (输入框 (“请输入删除类型！  1.删除项 2.删除文件”, , “1”, 删除类型, 2, _启动窗口.取窗口句柄 ()) ＝ 真)
    .如果真 (删除类型 ＝ 1)
        启动线程 (&_重置亲情号码1, , )
    .如果真结束
    .如果真 (删除类型 ＝ 2)
        启动线程 (&_重置亲情号码2, , )
    .如果真结束

.如果真结束


.子程序 _超级按钮_打开屏幕映射_被单击

启动线程 (&_打开屏幕映射, , )

.子程序 _打开屏幕映射

.如果 (文件是否存在 (取运行目录 () ＋ “\scrcpy-noconsole.exe”) ＝ 真)
    运行 (取运行目录 () ＋ “\scrcpy-noconsole.exe”, 假, )
.否则
    信息框 (“找不到配置文件！”, 0, , _启动窗口.取窗口句柄 ())
.如果结束


.子程序 _编辑框_姓名1_按下某键, 逻辑型
.参数 键代码, 整数型
.参数 功能键状态, 整数型

.如果真 (键代码 ＝ #回车键)
    编辑框_亲情号码1.获取焦点 ()
.如果真结束


.子程序 _编辑框_亲情号码1_按下某键, 逻辑型
.参数 键代码, 整数型
.参数 功能键状态, 整数型

.如果真 (键代码 ＝ #回车键)
    编辑框_姓名2.获取焦点 ()
.如果真结束


.子程序 _编辑框_姓名2_按下某键, 逻辑型
.参数 键代码, 整数型
.参数 功能键状态, 整数型

.如果真 (键代码 ＝ #回车键)
    编辑框_亲情号码2.获取焦点 ()
.如果真结束


.子程序 _编辑框_亲情号码2_按下某键, 逻辑型
.参数 键代码, 整数型
.参数 功能键状态, 整数型

.如果真 (键代码 ＝ #回车键)
    编辑框_姓名3.获取焦点 ()
.如果真结束


.子程序 _编辑框_姓名3_按下某键, 逻辑型
.参数 键代码, 整数型
.参数 功能键状态, 整数型

.如果真 (键代码 ＝ #回车键)
    编辑框_亲情号码3.获取焦点 ()
.如果真结束


.子程序 __启动窗口_位置被改变

窗口_运行中.左边 ＝ _启动窗口.左边 ＋ 150
窗口_运行中.顶边 ＝ _启动窗口.顶边 ＋ 150


.子程序 __启动窗口_获得焦点

.如果真 (窗口_运行中.可视 ＝ 真)
    窗口_运行中.获取焦点 ()
.如果真结束

‘*********************************************************************************************************

’窗口程序集_运行中窗口


.版本 2

.程序集 窗口程序集_窗口_运行中

.子程序 _窗口_运行中_创建完毕

窗口_圆角化 (窗口_运行中.取窗口句柄 (), , )
窗口_置透明度 (窗口_运行中.取窗口句柄 (), 200, , 真)
窗口_置顶 (窗口_运行中.取窗口句柄 (), )


